{"version":3,"file":"index.cjs.js","sources":["../src/components/YoungTable.tsx","../src/components/YoungPagination.tsx","../src/components/YoungDialog.tsx","../src/hooks/useAutoLoad.ts","../src/hooks/useFormMode.ts"],"sourcesContent":["/*\n * @Author: zhangyang\n * @Date: 2023-01-05 17:08:17\n * @LastEditTime: 2023-01-05 17:44:40\n * @Description: \n */\nimport { nextTick, onActivated, ref, watchEffect, defineComponent } from 'vue';\nimport type { PropType, VNode } from 'vue';\nimport { deepClone } from '@bluesyoung/utils';\nimport { ElTable, ElTableColumn, ElTooltip } from 'element-plus';\nimport { useAutoLoad } from '..';\n\nexport type TableHeadAligin = 'left' | 'center' | 'right' | undefined;\n\nexport interface TableHeadItem<T extends any = any> {\n  prop: keyof T;\n  label: string;\n  width?: string;\n  sortable?: boolean;\n  fixed?: boolean;\n  aligin?: TableHeadAligin;\n  tool_content?: string;\n  only_export?: boolean;\n  only_display?: boolean;\n  render?: (row: T) => VNode;\n  [x: string]: any;\n};\n\nexport type TableDataItem<T extends any = any> = {\n  [key in keyof T]: T[key];\n} & Record<string, any>;\n\n\nexport default defineComponent({\n  props: {\n    tableData: {\n      type: Object as PropType<TableDataItem[]>,\n      required: true\n    },\n    tableHead: {\n      type: Object as PropType<TableDataItem[]>,\n      required: true\n    },\n    tableHeight: {\n      type: Number,\n      default: 600\n    }\n  },\n  emits: ['sort-change'],\n  setup(props, { emit, attrs, slots }) {\n    /**\n     * 引用表格元素\n     */\n    const tableRef = ref<any>(null);\n    // 修复表格切换时，显示出现错位的 bug\n    onActivated(() => {\n      nextTick(() => {\n        tableRef.value.doLayout();\n      });\n    });\n\n    const tableData_1 = ref<TableDataItem[]>([]);\n    const tableHead_1 = ref<TableHeadItem[]>([]);\n\n    watchEffect(() => {\n      const t1 = props.tableData;\n      const t2 = props.tableHead;\n      const len = t1.length;\n\n      nextTick(() => {\n        // @ts-ignore\n        tableHead_1.value = t2.filter((item) => !item.only_export);\n\n        const step = 50;\n        if (len <= step) {\n          tableData_1.value = deepClone(t1);\n        } else {\n          const {\n            elArr,\n            load\n          } = useAutoLoad(tableData_1, ref(t1), step);\n\n          let n = 0;\n          tableData_1.value = t1.slice(n, step);\n\n          nextTick(() => {\n            elArr.value = tableRef.value.$el.querySelector('tbody').children;\n            load();\n          });\n        }\n      });\n    });\n\n    return () => (\n      // @ts-ignore\n      <ElTable {...attrs} ref={tableRef} data={tableData_1.value} style=\"width: 100%\" height={props.tableHeight} onSortChange={(e) => emit('sort-change', e)}>\n        {\n          tableHead_1.value.map((head, index) =>\n            <ElTableColumn\n              key={index}\n              prop={head.prop as string}\n              label={head.label}\n              width={head.width || ''}\n              sortable={head.sortable || false}\n              fixed={head.fixed || false}\n              align={head.aligin || 'left'}\n              v-slots={{\n                header: (scope) => {\n                  if (tableHead_1.value[scope.$index].tool_content) {\n                    return (\n                      <>\n                        <span>{scope.column.label}</span>\n                        <ElTooltip placement='bottom' v-slots={{ content: () => tableHead_1.value[scope.$index].tool_content }}\n                        />\n                      </>);\n                  } else {\n                    return <span>{scope.column.label}</span>;\n                  }\n                },\n                default: (scope) => {\n                  if (head.render) {\n                    return <component is={head.render(scope.row)} />\n                  } else {\n                    return <span>{scope.row[head.prop]}</span>\n                  }\n                }\n              }}\n            />\n          )\n        }\n        {\n          slots.switch?.()\n        }\n        {\n          slots.operate?.()\n        }\n      </ElTable>\n    )\n  }\n});","/*\n * @Author: zhangyang\n * @Date: 2023-01-05 17:51:59\n * @LastEditTime: 2023-01-05 18:02:01\n * @Description: \n */\nimport { ElPagination } from 'element-plus';\nimport { defineComponent, type PropType } from 'vue';\n\nconst RequiredNumber = {\n  type: Number,\n  required: true\n} as const;\n\nexport default defineComponent({\n  props: {\n    total: RequiredNumber,\n    page: RequiredNumber,\n    limit: RequiredNumber,\n    pageSizes: {\n      type: Object as PropType<number[]>,\n      default: () => ([10, 20, 30, 50])\n    },\n    layout: {\n      type: String,\n      default: 'total, sizes, prev, pager, next, jumper'\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true\n    },\n    hidden: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['page-change', 'update:page', 'update:limit'],\n  setup(props, { emit, attrs }) {\n    const sizeChange = (val: number) => {\n      emit('update:page', 1);\n      emit('update:limit', val);\n      emit('page-change');\n    };\n    const pageChange = (val: number) => {\n      emit('update:page', val);\n      emit('page-change');\n    };\n\n    return () => (\n      <div style=\"background: white; padding-top: 20px;\">\n        <ElPagination\n          {...attrs}\n          background={props.background}\n          currentPage={props.page}\n          pageSize={props.limit}\n          layout={props.layout}\n          pageSizes={props.pageSizes}\n          total={props.total}\n          onSize-change={(v) => sizeChange(v)}\n          onCurrent-change={(v) => pageChange(v)}\n        />\n      </div>\n    );\n  }\n});","/*\n * @Author: zhangyang\n * @Date: 2023-01-05 18:03:54\n * @LastEditTime: 2023-01-05 18:09:45\n * @Description: \n */\nimport { ElButton, ElDialog, ElMessageBox } from 'element-plus';\nimport { Teleport, computed, defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    modelValue: Boolean,\n    realTitle: String,\n    sureText: {\n      type: String,\n      default: '确定'\n    },\n    cancelText: {\n      type: String,\n      default: '取消'\n    },\n    showSure: {\n      type: Boolean,\n      default: true\n    },\n    showCancel: {\n      type: Boolean,\n      default: true\n    },\n    isAdd: Boolean,\n    isEdit: Boolean,\n    isMore: Boolean,\n    sureFn: Function\n  },\n  emits: ['sure', 'clear', 'update:modelValue'],\n  setup(props, { emit, attrs, slots }) {\n    const title = computed(() => {\n      let str = '新建';\n      if (props.isEdit) {\n        str = '编辑';\n      }\n      if (props.isMore) {\n        str = '详情';\n      }\n      return str;\n    });\n\n    const showDialog = computed({\n      get: () => props.isAdd || props.isMore || props.isEdit,\n      set: (v) => null\n    });\n\n    const sure = async () => {\n      if (props.sureFn) {\n        const res = await props.sureFn();\n        if (res === false) {\n          return;\n        }\n      }\n      if (props.isMore) {\n        emit('clear');\n        return;\n      }\n      emit('update:modelValue', false);\n      emit('sure');\n    };\n\n    const beforeClose = () => {\n      if (props.isMore || !props.showCancel) {\n        emit('clear');\n        emit('update:modelValue', false);\n        return;\n      }\n      ElMessageBox.confirm('数据未保存，关闭将丢失数据，确认关闭？', '提示').then(() => {\n        emit('update:modelValue', false);\n        emit('clear');\n      }).catch(() => null);\n    };\n\n    return () => (\n      <Teleport to=\"body\">\n        <ElDialog\n          {...attrs}\n          modelValue={props.modelValue || showDialog.value}\n          title={props.realTitle || title.value}\n          closeOnClickModal={false}\n          closeOnPressEscape={false}\n          beforeClose={beforeClose}\n          v-slots={{\n            default: () => slots.body?.(),\n            footer: () => {\n              return (\n                <>\n                  {\n                    slots.button?.()\n                  }\n                  {\n                    props.showCancel && <ElButton onClick={() => beforeClose()}>{props.cancelText}</ElButton>\n                  }\n                  {\n                    slots.step1?.()\n                  }\n                  {\n                    slots.step2?.()\n                  }\n                  {\n                    props.showSure && <ElButton type='primary' onClick={() => sure()}>{props.sureText}</ElButton>\n                  }\n                </>\n              )\n            }\n          }}\n        />\n      </Teleport>\n    );\n  }\n});","/*\n * @Author: zhangyang\n * @Date: 2023-01-05 10:47:55\n * @LastEditTime: 2023-01-05 11:09:17\n * @Description:\n */\nimport type { Ref } from 'vue';\nimport { ref, watchEffect, nextTick } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nexport const useAutoLoad = <T>(\n  list: Ref<T[]>,\n  allData: Ref<T[]>,\n  pageSize = 10,\n  pause = ref(false),\n) => {\n  const elArr = ref<HTMLDivElement[]>([]);\n  const touchEndEl = ref(false);\n  const page = ref(1);\n\n  const load = () => {\n    const { stop } = useIntersectionObserver(\n      elArr.value[list.value.length - 1],\n      ([{ isIntersecting }]) => {\n        if (isIntersecting) {\n          touchEndEl.value = isIntersecting;\n          stop();\n        }\n      },\n    );\n  };\n\n  watchEffect(async () => {\n    if (pause.value) {\n      return;\n    }\n\n    if (touchEndEl.value) {\n      if (list.value.length === allData.value.length) {\n        return;\n      }\n      page.value++;\n      const slicePart = allData.value.slice(pageSize * (page.value - 1), pageSize * page.value);\n      if (slicePart.length === 0) {\n        return;\n      }\n      list.value.push(...slicePart);\n      touchEndEl.value = false;\n      await nextTick();\n      load();\n    }\n  });\n\n  return {\n    elArr,\n    touchEndEl,\n    page,\n    load,\n  };\n};\n","/*\n * @Author: zhangyang\n * @Date: 2023-01-05 17:10:41\n * @LastEditTime: 2023-01-05 18:57:15\n * @Description:\n */\nimport { deepClone } from '@bluesyoung/utils';\nimport { ElMessageBox } from 'element-plus';\nimport { ref } from 'vue';\n\ntype Cbk<T> = {\n  addCbk?: () => Promise<void | boolean>;\n  modCbk?: () => Promise<void | boolean>;\n  delCbk?: (row: T) => void;\n  cpEffect?: (row: T) => void;\n  cgEffect?: () => void;\n  disableclear?: boolean;\n};\ntype ValidFn = () => Promise<boolean>;\n\nexport const useFormMode = <T>(\n  FORM_TEMP: T,\n  { addCbk, modCbk, delCbk, cpEffect, cgEffect, disableclear }: Cbk<T>,\n  tip = '确认删除该条数据？',\n) => {\n  const isAdd = ref(false);\n  const isEdit = ref(false);\n  const isMore = ref(false);\n\n  const form = ref<T>(deepClone(FORM_TEMP));\n  const formRef = ref();\n  const validForm: ValidFn = async () => {\n    const res = await new Promise((resolve) => {\n      formRef.value\n        ?.validate(async (valid) => {\n          if (valid) {\n            resolve(true);\n          }\n        })\n        .catch((err) => {\n          resolve(false);\n        });\n    });\n    return res as boolean;\n  };\n  const clear = () => {\n    isAdd.value = false;\n    isEdit.value = false;\n    isMore.value = false;\n    // @ts-ignore\n    form.value = deepClone(FORM_TEMP);\n  };\n\n  const del = (row: any) => {\n    ElMessageBox.confirm(tip, '提示', {\n      type: 'warning',\n    })\n      .then(async () => {\n        await delCbk?.(row);\n        cgEffect?.();\n      })\n      .catch(() => null);\n  };\n\n  const sure = async () => {\n    if (isAdd.value) {\n      const res = await addCbk?.();\n      if (res === false) {\n        return;\n      }\n    } else {\n      const res = await modCbk?.();\n      if (res === false) {\n        return;\n      }\n    }\n    !disableclear && clear();\n    cgEffect?.();\n  };\n\n  const edit = (row: any) => {\n    cpEffect?.(row);\n    form.value = deepClone(row);\n    isEdit.value = true;\n  };\n  const more = (row: any) => {\n    cpEffect?.(row);\n    form.value = deepClone(row);\n    isMore.value = true;\n  };\n  return {\n    isAdd,\n    isEdit,\n    isMore,\n    clear,\n    edit,\n    more,\n    form,\n    del,\n    sure,\n    formRef,\n    validForm,\n  };\n};\n"],"names":["YoungTable","defineComponent","props","tableData","type","Object","required","tableHead","tableHeight","Number","default","emits","setup","emit","attrs","slots","tableRef","ref","onActivated","nextTick","value","doLayout","tableData_1","tableHead_1","watchEffect","t1","t2","len","length","filter","item","only_export","step","deepClone","elArr","load","useAutoLoad","n","slice","$el","querySelector","children","_createVNode","ElTable","_mergeProps","e","map","head","index","ElTableColumn","prop","label","width","sortable","fixed","aligin","header","scope","$index","tool_content","_Fragment","column","ElTooltip","content","render","_resolveComponent","row","switch","operate","RequiredNumber","YoungPagination","total","page","limit","pageSizes","layout","String","background","Boolean","autoScroll","hidden","sizeChange","val","pageChange","ElPagination","v","YoungDialog","modelValue","realTitle","sureText","cancelText","showSure","showCancel","isAdd","isEdit","isMore","sureFn","Function","title","computed","str","showDialog","get","set","sure","beforeClose","ElMessageBox","confirm","then","catch","Teleport","ElDialog","body","footer","button","ElButton","step1","step2","list","allData","pageSize","pause","touchEndEl","stop","useIntersectionObserver","isIntersecting","slicePart","useFormMode","FORM_TEMP","addCbk","modCbk","delCbk","cpEffect","cgEffect","disableclear","tip","form","formRef","validForm","resolve","_a","valid","err","clear"],"mappings":"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"}