{"version":3,"file":"index.umd.js","sources":["../src/casdoor-sdk.ts","../src/no-login/master.ts","../src/no-login/slave.ts","../src/index.ts"],"sourcesContent":["// Copyright 2021 The casbin Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface SdkConfig {\n  serverUrl: string, // your Casdoor server URL, e.g., \"https://door.casbin.com\" for the official demo site\n  clientId: string, // the Client ID of your Casdoor application, e.g., \"014ae4bd048734ca2dea\"\n  appName: string, // the name of your Casdoor application, e.g., \"app-casnode\"\n  organizationName: string // the name of the Casdoor organization connected with your Casdoor application, e.g., \"casbin\"\n  redirectPath?: string // the path of the redirect URL for your Casdoor application, will be \"/callback\" if not provided\n}\n\n// reference: https://github.com/casdoor/casdoor-go-sdk/blob/90fcd5646ec63d733472c5e7ce526f3447f99f1f/auth/jwt.go#L19-L32\nexport interface Account {\n  organization: string,\n  username: string,\n  type: string,\n  name: string,\n  avatar: string,\n  email: string,\n  phone: string,\n  affiliation: string,\n  tag: string,\n  language: string,\n  score: number,\n  isAdmin: boolean,\n  accessToken: string\n}\n\nclass Sdk {\n  private config: SdkConfig\n\n  constructor(config: SdkConfig) {\n      this.config = config\n      if (config.redirectPath === undefined || config.redirectPath === null) {\n          this.config.redirectPath = \"/callback\";\n      }\n  }\n\n  public getSignupUrl(enablePassword: boolean = true): string {\n      if (enablePassword) {\n          return `${this.config.serverUrl.trim()}/signup/${this.config.appName}`;\n      } else {\n          return this.getSigninUrl().replace(\"/login/oauth/authorize\", \"/signup/oauth/authorize\");\n      }\n  }\n\n  public getSigninUrl(): string {\n      const redirectUri = `${window.location.origin}${this.config.redirectPath}`;\n      const scope = \"read\";\n      const state = this.config.appName;\n      return `${this.config.serverUrl.trim()}/login/oauth/authorize?client_id=${this.config.clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}&state=${state}`;\n  }\n\n  public getUserProfileUrl(userName: string, account: Account): string {\n      let param = \"\";\n      if (account !== undefined && account !== null) {\n          param = `?access_token=${account.accessToken}`;\n      }\n      return `${this.config.serverUrl.trim()}/users/${this.config.organizationName}/${userName}${param}`;\n  }\n\n  public getMyProfileUrl(account: Account): string {\n      let param = \"\";\n      if (account !== undefined && account !== null) {\n          param = `?access_token=${account.accessToken}`;\n      }\n      return `${this.config.serverUrl.trim()}/account${param}`;\n  }\n\n  public signin(serverUrl: string): Promise<Response> {\n      const params = new URLSearchParams(window.location.search);\n      return fetch(`${serverUrl}/api/signin?code=${params.get(\"code\")}&state=${params.get(\"state\")}`, {\n          method: \"POST\",\n          credentials: \"include\",\n      }).then(res => res.json());\n  }\n}\n\nexport default Sdk;\n","/*\n * @Author: zhangyang\n * @Date: 2022-05-25 11:42:10\n * @LastEditTime: 2022-05-25 12:23:41\n * @Description: 免登陆主应用\n */\n\nimport type { OnMessage } from '../typings/login';\n\nexport const defaultCmd = 'I want to login';\n\ntype Config = {\n  onmsg_cbk: OnMessage;\n};\n\nexport class Master {\n  constructor(conf: Config, cmd = defaultCmd) {\n    const onMessage: OnMessage = async (e) => {\n      if (e.data.cmd === cmd) {\n        conf.onmsg_cbk(e);\n      }\n    };\n\n    window.addEventListener('message', onMessage);\n  }\n};","/*\n * @Author: zhangyang\n * @Date: 2022-05-25 11:42:32\n * @LastEditTime: 2022-05-25 12:26:18\n * @Description: 免登陆子应用\n */\n\nimport type { OnMessage } from '../typings/login';\nimport { defaultCmd } from './master';\n\ntype Config = {\n  master_url: string;\n  onmsg_cbk: (args: any) => Promise<void>;\n};\n\n\nexport class Slave {\n  constructor(\n    conf: Config,\n    private cmd = defaultCmd\n  ) {\n    const onMessage: OnMessage = async (e) => {\n      if (e.origin === conf.master_url) {\n        await conf.onmsg_cbk(e.data);\n      }\n    };\n\n    window.addEventListener('message', onMessage);\n  }\n\n  init(fallback?: () => void) {\n    if (window.opener) {\n      (window.opener as Window).postMessage({\n        cmd: this.cmd\n      }, '*');\n    } else {\n      fallback?.();\n    }\n  }\n};","/*\n * @Author: zhangyang\n * @Date: 2022-05-17 17:09:04\n * @LastEditTime: 2022-05-25 12:08:50\n * @Description: \n */\nimport Casdoor from './casdoor-sdk';\nimport type { SdkConfig } from './casdoor-sdk';\n\ntype Operate = |\n'login' |\n'register';\n\nconst defaultConf: SdkConfig = {\n  serverUrl: 'https://door.casdoor.com',\n  clientId: '014ae4bd048734ca2dea',\n  organizationName: 'casbin',\n  appName: 'app-casnode',\n  redirectPath: window.location.pathname\n};\n\nexport class YoungAuth {\n  static hasAuthed() {\n    const { code, state } = Object.fromEntries(new URLSearchParams(window.location.search));\n    if (code && state) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private sdk: Casdoor;\n  constructor(conf: Partial<SdkConfig> = {}) {\n    const finalConf = Object.assign(defaultConf, conf);\n    this.sdk = new Casdoor(finalConf);\n  }\n\n  init(operate: Operate = 'login') {\n    let url = '';\n    if (operate === 'register') {\n      url = this.sdk.getSignupUrl();\n    } else {\n      url = this.sdk.getSigninUrl();\n    }\n    window.location.href = url;\n  }\n};\n\nexport * from './no-login/master';\nexport * from './no-login/slave';"],"names":["Casdoor"],"mappings":"0PAuCA,MAAM,CAAI,CAGR,YAAY,EAAmB,CAC3B,KAAK,OAAS,EACV,GAAO,eAAiB,QAAa,EAAO,eAAiB,OAC7D,MAAK,OAAO,aAAe,YAEnC,CAEO,aAAa,EAA0B,GAAc,CACxD,MAAI,GACO,GAAG,KAAK,OAAO,UAAU,iBAAiB,KAAK,OAAO,UAEtD,KAAK,aAAe,EAAA,QAAQ,yBAA0B,yBAAyB,CAE9F,CAEO,cAAuB,CAC1B,KAAM,GAAc,GAAG,OAAO,SAAS,SAAS,KAAK,OAAO,eACtD,EAAQ,OACR,EAAQ,KAAK,OAAO,QAC1B,MAAO,GAAG,KAAK,OAAO,UAAU,0CAA0C,KAAK,OAAO,4CAA4C,mBAAmB,CAAW,WAAW,WAAe,GAC9L,CAEO,kBAAkB,EAAkB,EAA0B,CACjE,GAAI,GAAQ,GACR,MAAA,AAAyB,IAAY,MACrC,GAAQ,iBAAiB,EAAQ,eAE9B,GAAG,KAAK,OAAO,UAAU,KAAgB,WAAA,KAAK,OAAO,oBAAoB,IAAW,GAC/F,CAEO,gBAAgB,EAA0B,CAC7C,GAAI,GAAQ,GACR,MAAA,AAAyB,IAAY,MACrC,GAAQ,iBAAiB,EAAQ,eAE9B,GAAG,KAAK,OAAO,UAAU,iBAAiB,GACrD,CAEO,OAAO,EAAsC,CAChD,KAAM,GAAS,GAAI,iBAAgB,OAAO,SAAS,MAAM,EAClD,MAAA,OAAM,GAAG,qBAA6B,EAAO,IAAI,MAAM,WAAW,EAAO,IAAI,OAAO,IAAK,CAC5F,OAAQ,OACR,YAAa,SAAA,CAChB,EAAE,KAAK,AAAO,GAAA,EAAI,KAAM,CAAA,CAC7B,CACF,CC9Ea,KAAA,GAAa,kBAMnB,MAAM,CAAO,CAClB,YAAY,EAAc,EAAM,EAAY,CACpC,KAAA,GAAuB,KAAO,IAAM,CACpC,AAAA,EAAE,KAAK,MAAQ,GACjB,EAAK,UAAU,CAAC,CAClB,EAGK,OAAA,iBAAiB,UAAW,CAAS,CAC9C,CACF,CCTO,MAAM,CAAM,CACjB,YACE,EACQ,EAAM,EACd,CADQ,KAAA,IAAA,EAEF,KAAA,GAAuB,KAAO,IAAM,CACpC,AAAA,EAAE,SAAW,EAAK,YACd,KAAA,GAAK,UAAU,EAAE,IAAI,CAC7B,EAGK,OAAA,iBAAiB,UAAW,CAAS,CAC9C,CAEA,KAAK,EAAuB,CAC1B,AAAI,OAAO,OACR,OAAO,OAAkB,YAAY,CACpC,IAAK,KAAK,KACT,GAAG,EAEK,YAEf,CACF,CC1BA,KAAM,GAAyB,CAC7B,UAAW,2BACX,SAAU,uBACV,iBAAkB,SAClB,QAAS,cACT,aAAc,OAAO,SAAS,QAChC,EAEO,MAAM,CAAU,OACd,YAAY,CACX,KAAA,CAAE,OAAM,SAAU,OAAO,YAAY,GAAI,iBAAgB,OAAO,SAAS,MAAM,CAAC,EACtF,MAAI,MAAQ,EAKd,CAGA,YAAY,EAA2B,GAAI,CACzC,KAAM,GAAY,OAAO,OAAO,EAAa,CAAI,EAC5C,KAAA,IAAM,GAAIA,GAAQ,CAAS,CAClC,CAEA,KAAK,EAAmB,QAAS,CAC/B,GAAI,GAAM,GACV,AAAI,IAAY,WACR,EAAA,KAAK,IAAI,eAET,EAAA,KAAK,IAAI,eAEjB,OAAO,SAAS,KAAO,CACzB,CACF"}