(function(t,o){typeof exports=="object"&&typeof module!="undefined"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(t=typeof globalThis!="undefined"?globalThis:t||self,o(t.YoungRPC={}))})(this,function(t){"use strict";const o="---young-rpc-shake-hands-message-request---";class a{constructor(){this.handlersMap={},window.opener&&window.opener!==window?this.masterWindow=window.opener:window.parent&&window.parent!==window&&(this.masterWindow=window.parent),this.shakeHands()}shakeHands(){if(!this.masterWindow)throw new Error("YoungRPCSlave can only be used in sub window");const n=new MessageChannel;this.port=n.port1,this.port.onmessage=s=>{const{data:e,isTrusted:r}=s;r&&e&&(e.cmd&&typeof e.cmd=="string"&&this.handlersMap[e.cmd]?this.handlersMap[e.cmd](e):console.warn("\u{1F680}unknown msg",e))},this.port.onmessageerror=s=>{console.error("\u{1F680} ~ YoungRPCSlave ~ e",s)},this.masterWindow.postMessage(o,"*",[n.port2])}trigger(n,s={}){this.port.postMessage({cmd:n,params:s})}setHandler(n,{success:s,fail:e}){return this.handlersMap[n]=async({ok:r,data:i})=>{r?await(s==null?void 0:s(i)):await(e==null?void 0:e(i))},this.trigger.bind(this,n)}}class d{constructor(){this.handlersMap={},window.addEventListener("message",async n=>{n.data===o&&(this.port=n.ports[0],this.port.onmessage=s=>{const{data:e,isTrusted:r}=s;r&&e&&(e.cmd&&typeof e.cmd=="string"&&this.handlersMap[e.cmd]?this.handlersMap[e.cmd](e.params):console.warn("\u{1F680}unknown msg",e))},this.port.onmessageerror=s=>{console.error("\u{1F680} ~ YoungRPCMaster ~ ",s)},console.log("\u{1F680}\u{1F680}\u{1F680} master app is ready \u{1F680}\u{1F680}\u{1F680}"))})}setHandler(n,s){this.handlersMap[n]=s}close(){this.port.close()}sendMsg(n){this.port.postMessage(n)}}t.YoungRPCMaster=d,t.YoungRPCSlave=a,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=index.umd.js.map
