{"version":3,"file":"index.es.js","sources":["../src/core/share.ts","../src/core/slave.ts","../src/core/master.ts"],"sourcesContent":["/*\r\n * @Author: zhangyang\r\n * @Date: 2022-07-02 15:08:54\r\n * @LastEditTime: 2022-07-02 19:59:17\r\n * @Description: \r\n */\r\nexport const SHAKE_HANDS_MSG = '---young-rpc-shake-hands-message-request---';","/*\r\n * @Author: zhangyang\r\n * @Date: 2022-07-02 14:57:53\r\n * @LastEditTime: 2022-07-03 09:12:37\r\n * @Description: \r\n */\r\nimport { GetParamsSign, Young } from '../../typings';\r\nimport { SHAKE_HANDS_MSG } from './share';\r\n\r\ntype SlaveHandlers<T extends string | number | symbol> = Partial<Record<T, (args: Young.MasterReturnParams) => Promise<void>>>;\r\n\r\nexport class YoungRPCSlave<R extends Record<string, any>, T extends keyof R = keyof R> {\r\n  public port: MessagePort;\r\n  private masterWindow: Window;\r\n\r\n  private handlersMap: SlaveHandlers<T> = {};\r\n\r\n  constructor() {\r\n    if (window.opener && window.opener !== window) {\r\n      // Áî±Áà∂Á™óÂè£ÈÄöËøá window.open ÊâìÂºÄÁöÑ\r\n      this.masterWindow = window.opener;\r\n    } else if (window.parent && window.parent !== window) {\r\n      // iframe ÂµåÂ•ó\r\n      this.masterWindow = window.parent;\r\n    }\r\n    // ‰∏éÁà∂È°µÈù¢Êè°ÊâãÔºåÂª∫Á´ã‰ø°ÈÅì\r\n    this.shakeHands();\r\n  }\r\n\r\n  public shakeHands() {\r\n    if (!this.masterWindow) {\r\n      throw new Error('YoungRPCSlave can only be used in sub window');\r\n    }\r\n    const channel = new MessageChannel();\r\n    this.port = channel.port1;\r\n    this.port.onmessage = (e) => {\r\n      const { data, isTrusted } = e;\r\n      if (isTrusted && data) {\r\n        if (data.cmd && typeof data.cmd === 'string' && this.handlersMap[data.cmd as T]) {\r\n          // Â∑≤Áü•ÁöÑÊ∂àÊÅØÁ±ªÂûã\r\n          this.handlersMap[data.cmd](data as Young.MasterReturnParams);\r\n        }  else {\r\n          // Êú™Áü•ÁöÑÊ∂àÊÅØÁ±ªÂûã\r\n          console.warn('üöÄunknown msg', data);\r\n        }\r\n      }\r\n    };\r\n    this.port.onmessageerror = (e) => {\r\n      console.error('üöÄ ~ YoungRPCSlave ~ e', e);\r\n    };\r\n    \r\n    this.masterWindow.postMessage(SHAKE_HANDS_MSG, '*', [channel.port2]);\r\n  }\r\n\r\n  public trigger(cmd: T, params: Record<string, any> = {}) {\r\n    this.port.postMessage({ cmd, params });\r\n  }\r\n\r\n  public setHandler(cmd: T, { success, fail }: Young.Cbk) {\r\n    this.handlersMap[cmd] = async ({ ok, data }) => {\r\n      if (ok) {\r\n        await success?.(data);\r\n      } else {\r\n        await fail?.(data);\r\n      }\r\n    };\r\n    return this.trigger.bind(this, cmd) as (params?: GetParamsSign<R[T]>) => void;\r\n  }\r\n};","/*\r\n * @Author: zhangyang\r\n * @Date: 2022-07-02 14:57:48\r\n * @LastEditTime: 2022-07-03 09:49:56\r\n * @Description: \r\n */\r\nimport { GetParamsSign, Young } from '../../typings';\r\nimport { SHAKE_HANDS_MSG } from './share';\r\n\r\ntype MasterCbk<R extends Record<string, any>, T extends keyof R = keyof R> = (params: GetParamsSign<R[T]>) => any | Promise<any>;\r\ntype MasterHandlers<R extends Record<string, any>, T extends keyof R = keyof R> = Partial<Record<T, MasterCbk<R, T>>>;\r\n\r\nexport class YoungRPCMaster<R extends Record<string, any>, T extends keyof R = keyof R> {\r\n  private port: MessagePort;\r\n  private handlersMap: MasterHandlers<R, T> = {};\r\n  constructor() {\r\n    window.addEventListener('message', async (e) => {\r\n      if (e.data === SHAKE_HANDS_MSG) {\r\n        this.port = e.ports[0];\r\n        this.port.onmessage = (e) => {\r\n          const { data, isTrusted } = e;\r\n          if (isTrusted && data) {\r\n            // ÂèØ‰ª•Ê≠£ÂºèÂ§ÑÁêÜÊ∂àÊÅØ‰∫Ü\r\n            if (data.cmd && typeof data.cmd === 'string' && this.handlersMap[data.cmd as T]) {\r\n              // Â∑≤Áü•ÁöÑÊ∂àÊÅØÁ±ªÂûã\r\n              this.handlersMap[data.cmd](data.params as GetParamsSign<R[T]>);\r\n            }  else {\r\n              // Êú™Áü•ÁöÑÊ∂àÊÅØÁ±ªÂûã\r\n              console.warn('üöÄunknown msg', data);\r\n            }\r\n          }\r\n        };\r\n        this.port.onmessageerror = (e) => {\r\n          console.error('üöÄ ~ YoungRPCMaster ~ ', e);\r\n        };\r\n        console.log('üöÄüöÄüöÄ master app is ready üöÄüöÄüöÄ');\r\n      }\r\n    });\r\n  }\r\n\r\n  public setHandler(cmd: T, cbk: MasterCbk<R, T>) {\r\n    this.handlersMap[cmd] = cbk;\r\n  }\r\n\r\n  public close() {\r\n    // ÂÖ≥Èó≠‰ø°ÈÅì\r\n    this.port.close();\r\n  }\r\n\r\n  public sendMsg(data: Young.MasterReturnParams & { cmd: T }) {\r\n    this.port.postMessage(data);\r\n  }\r\n};"],"names":[],"mappings":"AAMO,MAAM,kBAAkB;ACKxB,MAAM,cAA0E;AAAA,EAMrF,cAAc;AAFd,SAAQ,cAAgC;AAGtC,QAAI,OAAO,UAAU,OAAO,WAAW,QAAQ;AAE7C,WAAK,eAAe,OAAO;AAAA,IAClB,WAAA,OAAO,UAAU,OAAO,WAAW,QAAQ;AAEpD,WAAK,eAAe,OAAO;AAAA,IAC7B;AAEA,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,aAAoB;AACd,QAAA,CAAC,KAAK,cAAc;AAChB,YAAA,IAAI,MAAM,8CAA8C;AAAA,IAChE;AACM,UAAA,UAAU,IAAI;AACpB,SAAK,OAAO,QAAQ;AACf,SAAA,KAAK,YAAY,CAAC,MAAM;AACrB,YAAA,EAAE,MAAM,cAAc;AAC5B,UAAI,aAAa,MAAM;AACjB,YAAA,KAAK,OAAO,OAAO,KAAK,QAAQ,YAAY,KAAK,YAAY,KAAK,MAAW;AAE1E,eAAA,YAAY,KAAK,KAAK,IAAgC;AAAA,QAAA,OACrD;AAEE,kBAAA,KAAK,wBAAiB,IAAI;AAAA,QACpC;AAAA,MACF;AAAA,IAAA;AAEG,SAAA,KAAK,iBAAiB,CAAC,MAAM;AACxB,cAAA,MAAM,iCAA0B,CAAC;AAAA,IAAA;AAG3C,SAAK,aAAa,YAAY,iBAAiB,KAAK,CAAC,QAAQ,KAAK,CAAC;AAAA,EACrE;AAAA,EAEA,QAAe,KAAQ,SAA8B,IAAI;AACvD,SAAK,KAAK,YAAY,EAAE,KAAK,OAAQ,CAAA;AAAA,EACvC;AAAA,EAEA,WAAkB,KAAQ,EAAE,SAAS,QAAmB;AACtD,SAAK,YAAY,OAAO,OAAO,EAAE,IAAI,WAAW;AAC9C,UAAI,IAAI;AACN,cAAM,oCAAU;AAAA,MAAI,OACf;AACL,cAAM,8BAAO;AAAA,MACf;AAAA,IAAA;AAEF,WAAO,KAAK,QAAQ,KAAK,MAAM,GAAG;AAAA,EACpC;AACF;ACxDO,MAAM,eAA2E;AAAA,EAGtF,cAAc;AADd,SAAQ,cAAoC;AAEnC,WAAA,iBAAiB,WAAW,OAAO,MAAM;AAC1C,UAAA,EAAE,SAAS,iBAAiB;AACzB,aAAA,OAAO,EAAE,MAAM;AACf,aAAA,KAAK,YAAY,CAAC,OAAM;AACrB,gBAAA,EAAE,MAAM,cAAc;AAC5B,cAAI,aAAa,MAAM;AAEjB,gBAAA,KAAK,OAAO,OAAO,KAAK,QAAQ,YAAY,KAAK,YAAY,KAAK,MAAW;AAE/E,mBAAK,YAAY,KAAK,KAAK,KAAK,MAA6B;AAAA,YAAA,OACvD;AAEE,sBAAA,KAAK,wBAAiB,IAAI;AAAA,YACpC;AAAA,UACF;AAAA,QAAA;AAEG,aAAA,KAAK,iBAAiB,CAAC,OAAM;AACxB,kBAAA,MAAM,iCAA0B,EAAC;AAAA,QAAA;AAE3C,gBAAQ,IAAI,6EAAmC;AAAA,MACjD;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEO,WAAW,KAAQ,KAAsB;AAC9C,SAAK,YAAY,OAAO;AAAA,EAC1B;AAAA,EAEA,QAAe;AAEb,SAAK,KAAK;EACZ;AAAA,EAEO,QAAQ,MAA6C;AACrD,SAAA,KAAK,YAAY,IAAI;AAAA,EAC5B;AACF;;"}